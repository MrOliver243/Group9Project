{"ast":null,"code":"import _defineProperty from \"D:\\\\COLLEGESTUFF\\\\cs353\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_ERRORS, CLEAR_ERRORS } from '../types';\nconst initialState = {\n  loading: false,\n  errors: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ERRORS:\n      return _objectSpread({}, state, {\n        loading: false,\n        errors: action.payload\n      });\n\n    case CLEAR_ERRORS:\n      return _objectSpread({}, state, {\n        loading: false,\n        errors: null\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/collegestuff/cs353/client/src/Redux/reducers/uiReducer.js"],"names":["SET_ERRORS","CLEAR_ERRORS","initialState","loading","errors","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,YAFF,QAGO,UAHP;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAHjB;;AAKF,SAAKP,YAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,MAAM,EAAE;AAHV;;AAKF;AACE,aAAOC,KAAP;AAdJ;AAgBD","sourcesContent":["import {\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}